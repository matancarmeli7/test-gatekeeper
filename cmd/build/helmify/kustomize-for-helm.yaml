apiVersion: v1
kind: Service
metadata:
  name: gatekeeper-webhook-service
  namespace: gatekeeper-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: configs.config.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
spec:
  names:
    shortNames:
      - config # add shortName to CRD until https://github.com/kubernetes-sigs/kubebuilder/issues/404 is solved
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplates.templates.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constrainttemplatepodstatuses.status.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: constraintpodstatuses.status.gatekeeper.sh
  annotations:
    helm.sh/hook: crd-install
    helm.sh/hook-delete-policy: before-hook-creation
status: null
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
spec:
  replicas: HELMSUBST_DEPLOYMENT_REPLICAS
  template:
    metadata:
      annotations:
        HELMSUBST_ANNOTATIONS: ""
    spec:
      containers:
        - name: manager
          args:
            - --port=8443
            - --logtostderr
            - --emit-admission-events={{ .Values.emitAdmissionEvents }}
            - --log-level={{ .Values.logLevel }}
            - --exempt-namespace=gatekeeper-system
            - --operation=webhook
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
          resources:
            HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_CONTAINER_RESOURCES: ""
      nodeSelector:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_NODE_SELECTOR: ""
      affinity:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_AFFINITY: ""
      tolerations:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_TOLERATIONS: ""
      imagePullSecrets:
        HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_IMAGE_PULL_SECRETS: ""
      hostNetwork: HELMSUBST_DEPLOYMENT_CONTROLLER_MANAGER_HOST_NETWORK
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gatekeeper-audit
  namespace: gatekeeper-system
spec:
  template:
    metadata:
      annotations:
        HELMSUBST_ANNOTATIONS: ""
    spec:
      containers:
        - name: manager
          args:
            - --audit-interval={{ .Values.auditInterval }}
            - --log-level={{ .Values.logLevel }}
            - --constraint-violations-limit={{ .Values.constraintViolationsLimit }}
            - --audit-from-cache={{ .Values.auditFromCache }}
            - --audit-chunk-size={{ .Values.auditChunkSize }}
            - --emit-audit-events={{ .Values.emitAuditEvents }}
            - --operation=audit
            - --operation=status
            - --logtostderr
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.release }}"
          resources:
            HELMSUBST_DEPLOYMENT_AUDIT_CONTAINER_RESOURCES: ""
      nodeSelector:
        HELMSUBST_DEPLOYMENT_AUDIT_NODE_SELECTOR: ""
      affinity:
        HELMSUBST_DEPLOYMENT_AUDIT_AFFINITY: ""
      tolerations:
        HELMSUBST_DEPLOYMENT_AUDIT_TOLERATIONS: ""
      imagePullSecrets:
        HELMSUBST_DEPLOYMENT_AUDIT_IMAGE_PULL_SECRETS: ""
      hostNetwork: HELMSUBST_DEPLOYMENT_AUDIT_HOST_NETWORK
---
apiVersion: v1
kind: Secret
metadata:
  annotations: HELMSUBST_SECRET_ANNOTATIONS
  name: gatekeeper-webhook-server-cert
  namespace: gatekeeper-system
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-validating-webhook-configuration
webhooks:
- clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admit
  name: validation.gatekeeper.sh
  timeoutSeconds: HELMSUBST_VALIDATING_WEBHOOK_TIMEOUT
  rules:
  - apiGroups:
    - "*"
    apiVersions:
    - '*'
    operations: HELMSUBST_VALIDATING_WEBHOOK_OPERATION_RULES
    resources:
    - '*'
- clientConfig:
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admitlabel
  name: check-ignore-label.gatekeeper.sh
  timeoutSeconds: HELMSUBST_VALIDATING_WEBHOOK_TIMEOUT
